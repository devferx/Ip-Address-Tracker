{"version":3,"sources":["assets/images/icon-arrow.svg","assets/images/icon-location.svg","initialState.js","reducer/index.js","actions/index.js","utils/convertRespToObj.js","utils/fetchGeoByIp.js","components/Header.js","components/Map.js","App.js","hooks/useGetLocationByIp.js","index.js"],"names":["module","exports","initialState","title","panel","ipAddres","location","timezone","isp","map","lng","lat","zoom","reducer","state","action","type","payload","updateLocation","convertResponseToObject","response","ip","region","country","postalCode","fetchGeoByIp","a","URL","process","fetch","resp","json","data","result","convertRespToObj","Header","useSelector","useState","setIp","dispatch","useDispatch","handleSubmit","event","preventDefault","className","onSubmit","placeholder","onChange","target","value","src","arrowIcon","alt","MapComponent","ReactMapboxGl","accessToken","Map","style","center","coordinates","markerImage","App","locationInfo","setData","useEffect","fetchData","useGetLocationByIp","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e591136d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-arrow.53ef8ed8.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-location.ff171469.svg\";","const initialState = {\n  title: \"IP Address Tracker\",\n  panel: {\n    ipAddres: \"192.212.174.101\",\n    location: \"Brooklyn, NY 101001\",\n    timezone: \"-05:00\",\n    isp: \"SpaceX Starlink\",\n  },\n  map: {\n    lng: -104.872758,\n    lat: 39.0916586,\n    zoom: 16,\n  },\n};\n\nexport default initialState;\n","import initialState from \"../initialState\";\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"UPDATE_LOCATION\":\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","export const updateLocation = (payload) => ({\n  type: \"UPDATE_LOCATION\",\n  payload,\n});\n","export default function convertResponseToObject(response, ip) {\n  const {\n    location: { region, country, postalCode, timezone, lat, lng },\n    isp,\n  } = response;\n\n  return {\n    panel: {\n      ipAddres: ip,\n      location: `${region}, ${country} ${postalCode}`,\n      timezone: timezone,\n      isp,\n    },\n    map: {\n      lng,\n      lat,\n      zoom: 16,\n    },\n  };\n}\n","import convertRespToObj from \"./convertRespToObj\";\n\nexport default async function fetchGeoByIp(ip) {\n  const URL = `https://geo.ipify.org/api/v1?apiKey=${process.env.REACT_APP_IP_GEO_TOKEN}&ipAddress=${ip}`;\n  const resp = await fetch(URL);\n  const data = await resp.json();\n  const result = convertRespToObj(data, ip);\n  return result;\n}\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateLocation } from \"../actions/index\";\nimport arrowIcon from \"../assets/images/icon-arrow.svg\";\nimport fetchGeoByIp from \"../utils/fetchGeoByIp\";\nimport \"../assets/styles/components/Header.css\";\n\nfunction Header() {\n  const title = useSelector((state) => state.title);\n  const [ip, setIp] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const { ipAddres, location, timezone, isp } = useSelector(\n    (state) => state.panel\n  );\n\n  const handleChange = (event) => setIp(event.target.value);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const resp = await fetchGeoByIp(ip);\n    dispatch(updateLocation(resp));\n  };\n\n  return (\n    <div className=\"header\">\n      <h2 className=\"header--title\">{title}</h2>\n      <form className=\"header__form\" onSubmit={handleSubmit}>\n        <input\n          className=\"header__form--input\"\n          type=\"text\"\n          placeholder=\"Search for any IP address or domain\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"header__form--btn\">\n          <img src={arrowIcon} alt=\"arrow right\" />\n        </button>\n      </form>\n\n      <div className=\"header__panel\">\n        <div className=\"header__panel__item\">\n          <p className=\"header__panel__item--title\">IP Address</p>\n          <p className=\"header__panel__item--info\">{ipAddres}</p>\n        </div>\n        <div className=\"header__panel__item\">\n          <p className=\"header__panel__item--title\">Location</p>\n          <p className=\"header__panel__item--info\">{location}</p>\n        </div>\n        <div className=\"header__panel__item\">\n          <p className=\"header__panel__item--title\">Timezone</p>\n          <p className=\"header__panel__item--info\">UTC {timezone}</p>\n        </div>\n        <div className=\"header__panel__item\">\n          <p className=\"header__panel__item--title\">ISP</p>\n          <p className=\"header__panel__item--info\">{isp}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","/* eslint-disable react/style-prop-object */\nimport React from \"react\";\nimport ReactMapboxGl, { Marker } from \"react-mapbox-gl\";\nimport markerImage from \"../assets/images/icon-location.svg\";\nimport { useSelector } from \"react-redux\";\nimport \"../assets/styles/components/Map.css\";\n\nconst MapComponent = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n});\n\nconst Map = () => {\n  const { lng, lat, zoom } = useSelector((state) => state.map);\n  return (\n    <MapComponent\n      className=\"map-container\"\n      style=\"mapbox://styles/mapbox/streets-v9\"\n      center={[lng, lat]}\n      zoom={[zoom]}\n    >\n      <Marker coordinates={[lng, lat]}>\n        <img className=\"map-marker\" src={markerImage} alt=\"marker\" />\n      </Marker>\n    </MapComponent>\n  );\n};\n\nexport default Map;\n","import React, { useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Map from \"./components/Map\";\nimport { useDispatch } from \"react-redux\";\nimport { updateLocation } from \"./actions/\";\nimport useGetLocationByIp from \"./hooks/useGetLocationByIp\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const locationInfo = useGetLocationByIp(\"8.8.8.8\");\n\n  useEffect(() => {\n    dispatch(updateLocation(locationInfo));\n  }, [locationInfo, dispatch]);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\nimport fetchGeoByIp from \"../utils/fetchGeoByIp\";\n\nexport default function useGetLocationByIp(ip) {\n  const [data, setData] = useState({\n    panel: {\n      ipAddres: \"192.212.174.101\",\n      location: \"Brooklyn, NY 101001\",\n      timezone: \"-05:00\",\n      isp: \"SpaceX Starlink\",\n    },\n    map: {\n      lng: -104.872758,\n      lat: 39.0916586,\n      zoom: 16,\n    },\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await fetchGeoByIp(ip);\n      setData(resp);\n    }\n\n    fetchData();\n  }, [ip]);\n\n  return data;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducer\";\nimport initialState from \"./initialState\";\nimport App from \"./App\";\nimport \"./assets/styles/index.css\";\n\nconst store = createStore(\n  reducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}